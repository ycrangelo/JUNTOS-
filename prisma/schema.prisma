generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://angeloyocoryocor:angeloangeloangelo@cluster0.p13owno.mongodb.net/juntos?retryWrites=true&w=majority&appName=Cluster0"
}

model User {
  id        String     @id @default(uuid()) @map("_id") // Unique user ID mapped to MongoDB's _id
  email     String     @unique // Unique email for the user, also used as a foreign key in related models
  name      String? // Optional field to store the user's name
  userImage String // user pictire
  createdAt DateTime   @default(now()) // Auto-generated timestamp for when the user was created
  updatedAt DateTime   @updatedAt // Auto-updated timestamp for the last update to the user record
  posts     Post[] // One-to-many relationship; a user can have multiple posts
  comments  Comments[] // One-to-many relationship; a user can make multiple comments
}

model Post {
  id        String     @id @default(uuid()) @map("_id") // Unique post ID mapped to MongoDB's _id
  email     String // Email of the user who created the post, serves as a foreign key to the User model
  likes     Int        @default(0) // Counter for likes on the post, defaults to 0
  pic       String? // Optional field for storing the URL or path of an image associated with the post
  caption   String // Text caption for the post
  createdAt DateTime   @default(now()) // Auto-generated timestamp for when the post was created
  updatedAt DateTime   @updatedAt // Auto-updated timestamp for the last update to the post
  comments  Comments[] // One-to-many relationship; a post can have multiple comments

  user User @relation(fields: [email], references: [email]) // Relation to the User model via the email field
}

model Comments {
  id        String   @id @default(uuid()) @map("_id") // Unique comment ID mapped to MongoDB's _id
  postId    String // Foreign key to relate comment to a specific post
  userName  String // Foreign key to relate comment to a specific user
  userImage String
  comment   String // Content of the comment
  createdAt DateTime @default(now()) // Auto-generated timestamp for when the comment was created
  updatedAt DateTime @updatedAt // Auto-updated timestamp for the last update to the comment

  post Post @relation(fields: [postId], references: [id]) // Relation to the Post model
  user User @relation(fields: [userName], references: [id]) // Relation to the User model
}
